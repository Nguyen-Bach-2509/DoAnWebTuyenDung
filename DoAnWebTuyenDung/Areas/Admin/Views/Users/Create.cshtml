@model DoAnWebTuyenDung.Models.User

@{
    Layout = "~/Areas/Admin/Views/Shared/_AdminLayout.cshtml";
}

<h2 class="text-center text-white p-3" style="background-color: #28a745;">TẠO NGƯỜI DÙNG</h2>

<div class="container mt-4">
    <div class="row justify-content-center">
        <div class="col-md-10">
            <div class="card">
                <div class="card-body">
                    @using (Html.BeginForm("Create","Users",FormMethod.Post))
                    {
                        @Html.AntiForgeryToken()

                    <div class="form-horizontal">
                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                        @*<div class="form-group">
            @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
            </div>
        </div>*@
                        <input name="Email" />

                        <div class="form-group">
                            @Html.LabelFor(model => model.Username, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.Username, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Username, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10 input-group">
                                @Html.PasswordFor(model => model.Password, new { htmlAttributes = new { @class = "form-control", id = "Password" } })
                                Ẩn mật khẩu
                                <span class="input-group-addon" id="togglePassword" style="cursor: pointer;">
                                    <i class="fas fa-eye" id="eyeIcon"></i>
                                </span>
                                @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.Label("Xác nhận mật khẩu", htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10 input-group">
                                @Html.Password("ConfirmPassword", null, new { @class = "form-control", id = "confirmPassword" })
                                Xác nhận mật khẩu
                                <span class="input-group-addon" id="toggleConfirmPassword" style="cursor: pointer;">
                                    <i class="fas fa-eye" id="confirmEyeIcon"></i>
                                </span>
                                @Html.ValidationMessage("ConfirmPassword", "", new { @class = "text-danger" })
                            </div>
                        </div>
                        @*<input name="Username" />

        <input name="Password" />
        <input name="ConfirmPassword" />*@


                        <div class="form-group">
                            @Html.LabelFor(model => model.UserRole, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.DropDownListFor(model => model.UserRole, new SelectList(new List<SelectListItem>
                                {
                                    new SelectListItem { Text = "Ứng viên", Value = "Candidate" },
                                    new SelectListItem { Text = "Tuyển dụng", Value = "Recruiter" }
                                }, "Value", "Text"), "-----Chọn vai trò-----", new { @class = "form-control" }) <!-- Dropdown cho UserRole -->
                                @Html.ValidationMessageFor(model => model.UserRole, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <!--<div class="form-group">
    @Html.Label("Trạng thái", htmlAttributes: new { @class = "control-label col-md-2" })
    <div class="col-md-10">
        @Html.DropDownList("Status", new SelectList(new List<SelectListItem>
        {
            new SelectListItem { Text = "Hoạt động", Value = "true" },
            new SelectListItem { Text = "Ngưng hoạt động", Value = "false" }
        }, "Value", "Text"), "------Chọn trạng thái-----", new { @class = "form-control" })-->
                        <!-- Dropdown cho trạng thái -->
                        <!--@Html.ValidationMessage("Status", "", new { @class = "text-danger" })
        </div>
    </div>-->
                        @if (Model != null)
                        {
                            <h2>Customer Information</h2>
                            <p><strong>Name:</strong> @Model.Username</p>
                            <p><strong>Phone:</strong> @Model.Password</p>
                            <p><strong>Email:</strong> @Model.Email</p>
                            <p><strong>Email:</strong> @Model.UserRole</p>
                            <p><strong>Email:</strong> @Model.Status</p>
                            <p><strong>Email:</strong> @Model.LastLoginDate</p>
                            <p><strong>Email:</strong> @Model.CreatedAt</p>
                            <p><strong>Email:</strong> @Model.ConfirmPassword</p>
                            <p><strong>Email:</strong> @Model.UserID</p>
                        }
                        <div class="form-group">
                            <div class="col-md-offset-2 col-md-10">
                                <input type="submit" value="Tạo" class="btn btn-primary" />
                            </div>
                        </div>
                    </div>
                    }
                </div>
            </div>
        </div>
    </div>
</div>

<div class="text-center mt-3">
    @Html.ActionLink("Quay lại danh sách", "Index", null, new { @class = "btn btn-secondary" })
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script>
        document.getElementById("togglePassword").addEventListener("click", function () {
            const passwordInput = document.getElementById("passwordInput");
            const eyeIcon = document.getElementById("eyeIcon");
            if (passwordInput.type === "password") {
                passwordInput.type = "text";
                eyeIcon.classList.remove("fa-eye");
                eyeIcon.classList.add("fa-eye-slash");
            } else {
                passwordInput.type = "password";
                eyeIcon.classList.remove("fa-eye-slash");
                eyeIcon.classList.add("fa-eye");
            }
        });

        document.getElementById("toggleConfirmPassword").addEventListener("click", function () {
            const confirmPasswordInput = document.getElementById("confirmPasswordInput");
            const confirmEyeIcon = document.getElementById("confirmEyeIcon");
            if (confirmPasswordInput.type === "password") {
                confirmPasswordInput.type = "text";
                confirmEyeIcon.classList.remove("fa-eye");
                confirmEyeIcon.classList.add("fa-eye-slash");
            } else {
                confirmPasswordInput.type = "password";
                confirmEyeIcon.classList.remove("fa-eye-slash");
                confirmEyeIcon.classList.add("fa-eye");
            }
        });
    </script>
}
